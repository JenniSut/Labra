{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jents\\\\OneDrive\\\\Asiakirjat\\\\Kouluhommat\\\\Front end\\\\uusiHarjoitutyo\\\\labra\\\\src\\\\components\\\\TilauksetMappaus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport PrintIcon from '@material-ui/icons/Print';\nimport { Link } from 'react-router-dom';\nimport { CardActions } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TilauksetMappaus(props) {\n  _s();\n\n  const tilaukset = props.tilaukset;\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [asiakas, setAsiakas] = useState([]);\n  const url = 'http://localhost:8080';\n\n  const haeAsiakas = async tilaus => {\n    const str = tilaus.asiakas;\n    const nimi = str.split(' ');\n    let etunimi = nimi[0];\n    let sukunimi = nimi[1];\n    console.log(etunimi, sukunimi); //try {\n    //    const response = await fetch (url + '/kanta/asiakkaat/one/' + etunimi + '/' + sukunimi);\n    //    const json = await response.json();\n    //    setAsiakas(json);\n    //    console.log('Asiakkaan haku onnistui')\n    //}catch (error) {\n    //    setAsiakas([]);\n    //    console.log('Asiakkaan haku ei onnistunut');\n    //}\n  };\n\n  console.log(tilaukset);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 4,\n    children: tilaukset.map(tilaus => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            minWidth: 250,\n            minHeight: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: tilaus.tuote,\n            subheader: tilaus.asiakas\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Tilausp\\xE4iv\\xE4m\\xE4\\xE4r\\xE4: \", tilaus.tilauspvm]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), tilaus.toimpvm ? /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Toimitusp\\xE4iv\\xE4m\\xE4\\xE4r\\xE4: \", tilaus.toimpvm]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Ei viel\\xE4 toimitettu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Hinta: \", tilaus.hinta, \"\\u20AC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Ty\\xF6ntekij\\xE4: \", tilaus.tyontekija]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: [tilaus.toimpvm ? /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Et voi en\\xE4\\xE4 muokata tilausta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n                component: Link,\n                to: '/muokkaatilausta/' + tilaus.id + '/' + tilaus.tuote + '/' + tilaus.tilauspvm + '/' + tilaus.tyontekija + '/' + tilaus.toimpvm + '/' + tilaus.hinta + '/' + tilaus.asiakas,\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 245\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                component: Link,\n                to: '/lasku/' + tilaus.id + '/' + tilaus.asiakas,\n                children: /*#__PURE__*/_jsxDEV(PrintIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 110\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, tilaus.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TilauksetMappaus, \"Jt33nDTAuSnOVmqlrQYRkVa7X4M=\");\n\n_c = TilauksetMappaus;\n;\nexport default TilauksetMappaus;\n\nvar _c;\n\n$RefreshReg$(_c, \"TilauksetMappaus\");","map":{"version":3,"sources":["C:/Users/jents/OneDrive/Asiakirjat/Kouluhommat/Front end/uusiHarjoitutyo/labra/src/components/TilauksetMappaus.js"],"names":["React","useState","Card","CardHeader","Typography","CardContent","Grid","EditIcon","IconButton","PrintIcon","Link","CardActions","TilauksetMappaus","props","tilaukset","open","setOpen","handleClickOpen","handleClose","asiakas","setAsiakas","url","haeAsiakas","tilaus","str","nimi","split","etunimi","sukunimi","console","log","map","minWidth","minHeight","tuote","tilauspvm","toimpvm","hinta","tyontekija","id"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { CardActions } from '@material-ui/core';\r\n\r\n\r\nfunction TilauksetMappaus (props) {\r\nconst tilaukset=props.tilaukset;\r\n\r\nconst [open, setOpen] = useState(false)\r\n\r\nconst handleClickOpen = () => {\r\n    setOpen(true);\r\n};\r\n\r\nconst handleClose = () => {\r\n    setOpen(false);\r\n};\r\n\r\nconst [asiakas, setAsiakas] = useState([]);\r\n\r\nconst url= 'http://localhost:8080'\r\n\r\nconst haeAsiakas = async(tilaus) => {\r\n    const str = (tilaus.asiakas);\r\n\r\n    const nimi = str.split(' ');\r\n    let etunimi= nimi[0];\r\n    let sukunimi= nimi[1];\r\n    console.log(etunimi, sukunimi);\r\n\r\n    //try {\r\n    //    const response = await fetch (url + '/kanta/asiakkaat/one/' + etunimi + '/' + sukunimi);\r\n    //    const json = await response.json();\r\n    //    setAsiakas(json);\r\n    //    console.log('Asiakkaan haku onnistui')\r\n    //}catch (error) {\r\n    //    setAsiakas([]);\r\n    //    console.log('Asiakkaan haku ei onnistunut');\r\n    //}\r\n}\r\n\r\n\r\nconsole.log(tilaukset);\r\nreturn (\r\n    <Grid container spacing = {4}>\r\n            {tilaukset.map(tilaus => {\r\n                return (\r\n                    <Grid item key={tilaus.id}>\r\n                        <Card style={{minWidth: 250, minHeight: 400}}>\r\n                            <CardHeader\r\n                            title={tilaus.tuote}\r\n                            subheader= {tilaus.asiakas}/>\r\n                            <CardContent>\r\n                            <Typography>Tilauspäivämäärä: {tilaus.tilauspvm}</Typography>\r\n                            {tilaus.toimpvm ? \r\n                                <Typography>Toimituspäivämäärä: {tilaus.toimpvm}</Typography>\r\n                                : <Typography>Ei vielä toimitettu</Typography>\r\n                            }\r\n                            <Typography>Hinta: {tilaus.hinta}€</Typography>\r\n                            <Typography>Työntekijä: {tilaus.tyontekija}</Typography>\r\n                            <CardActions>\r\n                            {tilaus.toimpvm ? \r\n                                <Typography>Et voi enää muokata tilausta</Typography>\r\n                                : \r\n                                    <IconButton component={ Link } to={ '/muokkaatilausta/' + tilaus.id + '/' + tilaus.tuote + '/' + tilaus.tilauspvm + '/' + tilaus.tyontekija + '/' + tilaus.toimpvm + '/' + tilaus.hinta + '/' + tilaus.asiakas}><EditIcon /></IconButton>\r\n                        \r\n                            }\r\n                                \r\n                            <IconButton component= {Link} to ={'/lasku/' + tilaus.id + '/' + tilaus.asiakas}><PrintIcon /></IconButton>\r\n                                \r\n                            </CardActions>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                )})}\r\n        </Grid>\r\n    );\r\n\r\n};\r\nexport default TilauksetMappaus;"]},"metadata":{},"sourceType":"module"}