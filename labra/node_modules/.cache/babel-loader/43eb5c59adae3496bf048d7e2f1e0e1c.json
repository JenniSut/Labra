{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jents\\\\OneDrive\\\\Asiakirjat\\\\Kouluhommat\\\\Front end\\\\uusiHarjoitutyo\\\\labra\\\\src\\\\components\\\\UusiTilaus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport fiLocale from 'date-fns/locale/fi';\nimport axios from 'axios';\nimport { IconButton } from '@material-ui/core';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UusiTilaus() {\n  _s();\n\n  const [tuote, setTuote] = useState('');\n\n  const muutaTuote = e => {\n    setTuote(e.target.value);\n  };\n\n  const [tilauspaiva, setTilauspaiva] = useState(null);\n\n  const muutaPaiva = date => {\n    const tilpaiva = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n    console.log(tilpaiva);\n    setTilauspaiva(tilpaiva);\n  };\n\n  const [toimpaiva, setTPaiva] = useState(null);\n\n  const muutaTPaiva = date => {\n    const toimpaiva = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n    setTPaiva(toimpaiva);\n  };\n\n  const [hinta, setHinta] = useState();\n\n  const muutaHinta = e => {\n    setHinta(e.target.value);\n  };\n\n  const [tyontekija, setTyontekija] = useState('');\n\n  const muutaTyontekija = e => {\n    setTyontekija(e.target.value);\n  };\n\n  const [asiakas, setAsiakas] = useState({});\n\n  const muutaAsiakas = e => {\n    setAsiakas(e.target.value);\n  };\n\n  const [lisatieto, setLisatieto] = useState('');\n\n  const muutaLisatieto = e => {\n    setLisatieto(e.target.value);\n  };\n\n  const [viesti, setViesti] = useState('');\n  const [tyontekijat, setTyontekijat] = useState([]);\n  const [asiakkaat, setAsiakkaat] = useState([]);\n  const url = 'http://localhost:8080'; //tilauksen lisäys kantaan\n\n  const lisaaTilaus = e => {\n    e.preventDefault();\n    const formData = {\n      'tuote': tuote,\n      'tilauspvm': tilauspaiva,\n      'toimpvm': toimpaiva,\n      'hinta': hinta,\n      'tyontekija': tyontekija,\n      'asiakas': asiakas,\n      'lisatieto': lisatieto\n    };\n    axios.post(url + '/kanta/tilaukset/add', formData).then(response => {\n      if (response.status === 200) {\n        setTuote('');\n        setTilauspaiva(new Date());\n        setTPaiva(null);\n        setHinta(0);\n        setTyontekija('');\n        setAsiakas('');\n        setViesti('Lisäys onnistui');\n      } else {\n        setViesti('Lisäys ei onnistunut');\n      }\n\n      ;\n    });\n  }; //tyontekijöiden ja asiakkaiden haku formia varten\n\n\n  const hae = async () => {\n    try {\n      const response = await fetch(url + '/kanta/tyontekijat/all');\n      const json = await response.json();\n      setTyontekijat(json);\n    } catch (error) {\n      setTyontekijat([]);\n      console.log('Työntekijöiden haku ei onnistunut');\n    }\n\n    try {\n      const response = await fetch(url + '/kanta/asiakkaat/all');\n      const json = await response.json();\n      setAsiakkaat(json);\n    } catch (error) {\n      setAsiakkaat([]);\n      console.log('Asiakkaiden haku ei onnistunut');\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    hae();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        width: '50%',\n        margin: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          padding: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          fullWidth: true,\n          label: \"Tuote\",\n          value: tuote,\n          onChange: e => muutaTuote(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          locale: fiLocale,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            label: \"Tilausp\\xE4iv\\xE4\",\n            name: \"tilauspaiva\",\n            fullWidth: true,\n            required: true,\n            value: tilauspaiva,\n            onChange: muutaPaiva,\n            format: \"dd.MM.yyyy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"tyont\",\n          children: \"Ty\\xF6ntekij\\xE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          label: \"Ty\\xF6ntekij\\xE4\",\n          required: true,\n          fullWidth: true,\n          value: tyontekija,\n          onChange: e => muutaTyontekija(e),\n          labelId: \"tyont\",\n          children: tyontekijat.map(tyontekija => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: tyontekija.etunimi + ' ' + tyontekija.sukunimi,\n              children: [tyontekija.etunimi, \" \", tyontekija.sukunimi]\n            }, tyontekija.tyontekija_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          locale: fiLocale,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            label: \"Toimitusp\\xE4iv\\xE4\",\n            name: \"toimpaiva\",\n            fullWidth: true,\n            value: toimpaiva,\n            onChange: muutaTPaiva,\n            format: \"dd.MM.yyyy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          fullWidth: true,\n          label: \"Hinta\",\n          value: hinta,\n          onChange: e => muutaHinta(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"asiakas\",\n          children: \"Asiakas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          label: \"Asiakas\",\n          required: true,\n          fullWidth: true,\n          value: asiakas,\n          onChange: e => muutaAsiakas(e),\n          labelId: \"asiakas\",\n          children: asiakkaat.map(asiakas => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: asiakas.etunimi + ' ' + asiakas.sukunimi,\n              children: [asiakas.etunimi, \" \", asiakas.sukunimi]\n            }, asiakas.asiakas_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Lis\\xE4tietoa:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          style: {\n            marginTop: 10\n          },\n          fullWidth: true,\n          name: \"lisatieto\",\n          label: \"Lis\\xE4tietoa\",\n          value: lisatieto,\n          onChange: e => muutaLisatieto(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: lisaaTilaus,\n        children: /*#__PURE__*/_jsxDEV(NoteAddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: viesti\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UusiTilaus, \"WhHzLcS696MEK8tudDXWNZNAp5Q=\");\n\n_c = UusiTilaus;\n;\nexport default UusiTilaus;\n\nvar _c;\n\n$RefreshReg$(_c, \"UusiTilaus\");","map":{"version":3,"sources":["C:/Users/jents/OneDrive/Asiakirjat/Kouluhommat/Front end/uusiHarjoitutyo/labra/src/components/UusiTilaus.js"],"names":["React","useState","useEffect","Paper","TextField","Select","MenuItem","InputLabel","Typography","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","fiLocale","axios","IconButton","NoteAddIcon","TextareaAutosize","UusiTilaus","tuote","setTuote","muutaTuote","e","target","value","tilauspaiva","setTilauspaiva","muutaPaiva","date","tilpaiva","getFullYear","getMonth","getDate","console","log","toimpaiva","setTPaiva","muutaTPaiva","hinta","setHinta","muutaHinta","tyontekija","setTyontekija","muutaTyontekija","asiakas","setAsiakas","muutaAsiakas","lisatieto","setLisatieto","muutaLisatieto","viesti","setViesti","tyontekijat","setTyontekijat","asiakkaat","setAsiakkaat","url","lisaaTilaus","preventDefault","formData","post","then","response","status","Date","hae","fetch","json","error","width","margin","padding","map","etunimi","sukunimi","tyontekija_id","asiakas_id","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport fiLocale from 'date-fns/locale/fi';\r\n\r\nimport axios from 'axios';\r\nimport { IconButton } from '@material-ui/core';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\n\r\n\r\nfunction UusiTilaus () {\r\n\r\n    const [tuote, setTuote] = useState('');\r\n    const muutaTuote = (e) => {\r\n    setTuote(e.target.value);\r\n    };\r\n\r\n    const [tilauspaiva, setTilauspaiva] = useState(null);\r\n    const muutaPaiva = (date) =>{\r\n        const tilpaiva = date.getFullYear()+ '-' + (date.getMonth()+1)+ '-' + date.getDate();\r\n        console.log(tilpaiva);\r\n        setTilauspaiva(tilpaiva);\r\n    };\r\n\r\n    const [toimpaiva, setTPaiva] = useState(null);\r\n    const muutaTPaiva = (date) => {\r\n        const toimpaiva = date.getFullYear()+ '-' + (date.getMonth()+1)+ '-' + date.getDate()\r\n        setTPaiva(toimpaiva);\r\n    };\r\n\r\n    const [hinta, setHinta] = useState();\r\n    const muutaHinta = (e) => {\r\n    setHinta(e.target.value);\r\n    };    \r\n\r\n    const [tyontekija, setTyontekija] = useState('');\r\n    const muutaTyontekija = (e) => {\r\n    setTyontekija(e.target.value);\r\n    };   \r\n\r\n    const [asiakas, setAsiakas] = useState({\r\n        \r\n    });\r\n    const muutaAsiakas = (e) =>{\r\n        setAsiakas(e.target.value);\r\n    };\r\n\r\n    const [lisatieto, setLisatieto] = useState('');\r\n    const muutaLisatieto = (e) => {\r\n        setLisatieto(e.target.value);\r\n    };\r\n\r\n    const [viesti, setViesti] = useState('');\r\n\r\n    const [tyontekijat, setTyontekijat] = useState([]);\r\n\r\n    const [asiakkaat, setAsiakkaat] = useState([]);\r\n\r\n    const url= 'http://localhost:8080'\r\n\r\n    //tilauksen lisäys kantaan\r\n    const lisaaTilaus = (e) => {\r\n        e.preventDefault();\r\n        const formData = {\r\n            'tuote' : tuote,\r\n            'tilauspvm': tilauspaiva,\r\n            'toimpvm': toimpaiva,\r\n            'hinta': hinta,\r\n            'tyontekija': tyontekija,\r\n            'asiakas': asiakas,\r\n            'lisatieto':lisatieto,\r\n        }\r\n        axios.post( url + '/kanta/tilaukset/add', formData)\r\n        .then(response => {\r\n            if (response.status === 200){\r\n                setTuote('')\r\n                setTilauspaiva(new Date())\r\n                setTPaiva(null)\r\n                setHinta(0)\r\n                setTyontekija('')\r\n                setAsiakas('')\r\n                setViesti('Lisäys onnistui')\r\n            }else{\r\n                setViesti('Lisäys ei onnistunut')\r\n            };\r\n        });\r\n    };\r\n\r\n    //tyontekijöiden ja asiakkaiden haku formia varten\r\n    const hae = async() => {\r\n        try {\r\n            const response = await fetch (url + '/kanta/tyontekijat/all');\r\n            const json = await response.json();\r\n            setTyontekijat(json);\r\n        }catch (error) {\r\n            setTyontekijat([]);\r\n            console.log('Työntekijöiden haku ei onnistunut');\r\n        }\r\n        try {\r\n            const response = await fetch (url + '/kanta/asiakkaat/all');\r\n            const json = await response.json();\r\n            setAsiakkaat(json);\r\n        }catch (error) {\r\n            setAsiakkaat([]);\r\n            console.log('Asiakkaiden haku ei onnistunut');\r\n        };\r\n    };\r\n\r\n\r\n    useEffect(() =>{\r\n        hae();\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <Paper elevation={3} style={{width:'50%', margin:10}}>\r\n                <form style={{padding:20}}>\r\n\r\n                    <TextField \r\n                        required\r\n                        fullWidth \r\n                        label='Tuote' \r\n                        value={tuote}\r\n                        onChange = {(e) => muutaTuote(e)}/>\r\n\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={fiLocale} >\r\n                        <KeyboardDatePicker \r\n                            label='Tilauspäivä' \r\n                            name='tilauspaiva'\r\n                            fullWidth={true} required\r\n                            value={tilauspaiva}\r\n                            onChange={muutaPaiva}\r\n                            format='dd.MM.yyyy' />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    \r\n                    <InputLabel id=\"tyont\">Työntekijä</InputLabel>\r\n                    <Select\r\n                        label='Työntekijä'\r\n                        required\r\n                        fullWidth\r\n                        value={tyontekija}\r\n                        onChange= {(e) => muutaTyontekija(e)}\r\n                        labelId='tyont'\r\n                    >{/*Mapataan kannasta haetut työntekijät selectiin */}\r\n                        {tyontekijat.map(tyontekija => {\r\n                            return(\r\n                                <MenuItem key= {tyontekija.tyontekija_id} value={tyontekija.etunimi + ' ' + tyontekija.sukunimi }>{tyontekija.etunimi} {tyontekija.sukunimi}</MenuItem>\r\n                            )\r\n                        })}\r\n                        \r\n                    </Select>\r\n                    \r\n\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={fiLocale}>\r\n                        <KeyboardDatePicker \r\n                        label='Toimituspäivä' \r\n                        name='toimpaiva'\r\n                        fullWidth={true}                    \r\n                        value={toimpaiva}\r\n                        onChange={ muutaTPaiva}\r\n                        format='dd.MM.yyyy' />\r\n                    </MuiPickersUtilsProvider>\r\n\r\n                    <TextField \r\n                        required\r\n                        fullWidth \r\n                        label='Hinta' \r\n                        value={hinta}\r\n                        onChange = {(e) => muutaHinta(e)}/>\r\n\r\n\r\n                    <InputLabel id=\"asiakas\">Asiakas</InputLabel>\r\n                    <Select\r\n                        label='Asiakas'\r\n                        required\r\n                        fullWidth\r\n                        value={asiakas}\r\n                        onChange= {(e) => muutaAsiakas(e)}\r\n                        labelId='asiakas'\r\n                    >{/*Mapataan kannasta haetut asiakkaat selectiin */}\r\n                        {asiakkaat.map(asiakas => {\r\n                            return(\r\n                                <MenuItem key= {asiakas.asiakas_id} value={asiakas.etunimi + ' ' + asiakas.sukunimi }>{asiakas.etunimi} {asiakas.sukunimi}</MenuItem>\r\n                            )\r\n                        })}\r\n                        \r\n                    </Select>\r\n                    <Typography>Lisätietoa:</Typography>\r\n                    <TextareaAutosize\r\n                    style={{marginTop:10}}\r\n                    fullWidth\r\n                    name='lisatieto'\r\n                    label='Lisätietoa'\r\n                    value={lisatieto}\r\n                    onChange = {(e) => muutaLisatieto(e)}/>\r\n\r\n                </form>\r\n                <IconButton\r\n                    onClick={lisaaTilaus}>\r\n                    <NoteAddIcon/>\r\n                </IconButton>\r\n\r\n                <Typography>{viesti}</Typography>\r\n            </Paper>\r\n        </div>\r\n    )\r\n};\r\nexport default UusiTilaus;"]},"metadata":{},"sourceType":"module"}